# Generated by Django 4.1 on 2022-10-05 23:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("album_title", models.CharField(max_length=50)),
                ("album_logo", models.FileField(default="/album_art/default.png", upload_to="album")),
            ],
            options={
                "db_table": "Album",
            },
        ),
        migrations.CreateModel(
            name="Artist",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("username", models.CharField(db_index=True, max_length=255)),
                ("email", models.EmailField(db_index=True, max_length=254, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("password", models.CharField(max_length=30)),
                ("about", models.TextField()),
                ("twitter", models.URLField()),
                ("facebook", models.URLField()),
                ("instagram", models.URLField()),
            ],
            options={
                "db_table": "Artist",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=30, unique=True)),
            ],
            options={
                "db_table": "Country",
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "db_table": "Genre",
            },
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[("AU", "AutoGenerated"), ("AR", "Artist"), ("US", "User"), ("CL", "Collaborative")],
                        max_length=4,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("PB", "public"), ("PR", "private"), ("FW", "followers"), ("FR", "friends")],
                        max_length=4,
                    ),
                ),
                (
                    "created_by_artist",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related19",
                        to="allmodels.artist",
                    ),
                ),
            ],
            options={
                "db_table": "Playlist",
            },
        ),
        migrations.CreateModel(
            name="RecordLabel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("username", models.CharField(db_index=True, max_length=255)),
                ("email", models.EmailField(db_index=True, max_length=254, unique=True)),
                ("password", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=5000)),
                ("record_label_logo", models.FileField(default="/rl_logo/default.png", upload_to="record_label")),
                ("twitter", models.URLField()),
                ("facebook", models.URLField()),
                ("instagram", models.URLField()),
            ],
            options={
                "db_table": "RecordLabel",
            },
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250)),
                ("audio_file", models.FileField(default="/track/track.mp3", upload_to="track")),
                ("track_length", models.DurationField()),
                ("explicit_content", models.BooleanField(default=False)),
                ("writer", models.CharField(max_length=50)),
                ("composer", models.CharField(max_length=50)),
                ("producer", models.CharField(max_length=50)),
                ("lyrics", models.TextField()),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="track", to="allmodels.album"
                    ),
                ),
            ],
            options={
                "db_table": "Track",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("username", models.CharField(db_index=True, max_length=255)),
                ("email", models.EmailField(db_index=True, max_length=254, unique=True)),
                ("password", models.CharField(max_length=30)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "nationality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related40", to="allmodels.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrackLikes",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "liked_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related17", to="allmodels.user"
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related18", to="allmodels.track"
                    ),
                ),
            ],
            options={
                "db_table": "TrackLikes",
                "unique_together": {("track", "liked_by")},
            },
        ),
        migrations.AddField(
            model_name="track",
            name="liked_by",
            field=models.ManyToManyField(through="allmodels.TrackLikes", to="allmodels.user"),
        ),
        migrations.CreateModel(
            name="PlaylistParticipants",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related27", to="allmodels.user"
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related26", to="allmodels.playlist"
                    ),
                ),
            ],
            options={
                "db_table": "PlaylistParticipation",
                "unique_together": {("playlist", "participant")},
            },
        ),
        migrations.CreateModel(
            name="PlaylistLikes",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "liked_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="hello", to="allmodels.user"
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related22", to="allmodels.playlist"
                    ),
                ),
            ],
            options={
                "db_table": "PlaylistLikes",
            },
        ),
        migrations.CreateModel(
            name="PlaylistContent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related24",
                        to="allmodels.user",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related25", to="allmodels.playlist"
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related23", to="allmodels.track"
                    ),
                ),
            ],
            options={
                "db_table": "PlaylistContent",
                "unique_together": {("track", "added_by")},
            },
        ),
        migrations.AddField(
            model_name="playlist",
            name="created_by_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name="related20", to="allmodels.user"
            ),
        ),
        migrations.AddField(
            model_name="playlist",
            name="liked_by",
            field=models.ManyToManyField(through="allmodels.PlaylistLikes", to="allmodels.user"),
        ),
        migrations.AddField(
            model_name="playlist",
            name="participant",
            field=models.ManyToManyField(
                related_name="hello_world", through="allmodels.PlaylistParticipants", to="allmodels.user"
            ),
        ),
        migrations.AddField(
            model_name="playlist",
            name="track",
            field=models.ManyToManyField(through="allmodels.PlaylistContent", to="allmodels.track"),
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="listened_track", to="allmodels.track"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="user_listened", to="allmodels.user"
                    ),
                ),
            ],
            options={
                "db_table": "History",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("venue", models.TextField()),
                ("registration", models.URLField()),
                ("event_poster", models.FileField(default="/event_poster/default.png", upload_to="album")),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related15", to="allmodels.artist"
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related41", to="allmodels.country"
                    ),
                ),
            ],
            options={
                "db_table": "Event",
            },
        ),
        migrations.CreateModel(
            name="ArtistPhotos",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("photo", models.FileField(upload_to="")),
                ("date_added", models.DateField(auto_now_add=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related7", to="allmodels.artist"
                    ),
                ),
            ],
            options={
                "db_table": "ArtistPhotos",
            },
        ),
        migrations.AddField(
            model_name="artist",
            name="nationality",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="related30", to="allmodels.country"
            ),
        ),
        migrations.AddField(
            model_name="artist",
            name="record_label",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="related10", to="allmodels.recordlabel"
            ),
        ),
        migrations.CreateModel(
            name="AlbumLikes",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related6", to="allmodels.album"
                    ),
                ),
                (
                    "liked_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related5", to="allmodels.user"
                    ),
                ),
            ],
            options={
                "db_table": "AlbumLikes",
                "unique_together": {("album", "liked_by")},
            },
        ),
        migrations.AddField(
            model_name="album",
            name="artist",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="album_artist", to="allmodels.artist"
            ),
        ),
        migrations.AddField(
            model_name="album",
            name="genre",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="album_genre", to="allmodels.genre"
            ),
        ),
        migrations.AddField(
            model_name="album",
            name="liked_by",
            field=models.ManyToManyField(through="allmodels.AlbumLikes", to="allmodels.user"),
        ),
        migrations.CreateModel(
            name="LikedSong",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="liked_track", to="allmodels.track"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="user_like", to="allmodels.user"
                    ),
                ),
            ],
            options={
                "db_table": "LikedSong",
                "unique_together": {("user", "track")},
            },
        ),
        migrations.CreateModel(
            name="Followers",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related9", to="allmodels.artist"
                    ),
                ),
                (
                    "followed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related8", to="allmodels.user"
                    ),
                ),
            ],
            options={
                "db_table": "Followers",
                "unique_together": {("artist", "followed_by")},
            },
        ),
        migrations.CreateModel(
            name="AlbumReleaseInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField()),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related3", to="allmodels.album"
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="related4", to="allmodels.country"
                    ),
                ),
            ],
            options={
                "db_table": "AlbumReleaseInfo",
                "unique_together": {("album", "country")},
            },
        ),
    ]
